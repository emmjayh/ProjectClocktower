name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## ðŸŽ­ Blood on the Clocktower AI Storyteller ${{ github.ref }}
          
          ### âœ¨ What's New
          - See [CHANGELOG.md](CHANGELOG.md) for detailed changes
          
          ### ðŸ“¦ Downloads
          - **Windows Users**: Download `BloodClockTowerAI-Setup.exe` for easy installation
          - **Python Users**: Download source code and follow README instructions
          
          ### ðŸš€ Quick Start
          1. Download and run the Windows installer
          2. Run `download_models.bat` to download AI models
          3. Launch the AI Storyteller and connect to your online game
          4. Start storytelling with voice commands!
          
          ### ðŸŽ¯ System Requirements
          - Windows 10/11
          - 4GB RAM minimum
          - Microphone for voice commands
          - Internet connection for platform integration
          
          ### ðŸ”§ Troubleshooting
          Check the [README](README.md) for common issues and solutions.
          
        draft: false
        prerelease: false

  build-windows:
    needs: create-release
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build Windows executable
      run: |
        python build_windows.py
        
    - name: Create installer
      run: |
        # Install NSIS if available
        if (Test-Path "C:\Program Files (x86)\NSIS\makensis.exe") {
          & "C:\Program Files (x86)\NSIS\makensis.exe" installer.nsi
        }
        
    - name: Upload Windows executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/BloodClockTowerAI.exe
        asset_name: BloodClockTowerAI.exe
        asset_content_type: application/octet-stream
        
    - name: Upload Windows installer (if exists)
      if: success()
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./BloodClockTowerAI_Setup.exe
        asset_name: BloodClockTowerAI-Setup.exe
        asset_content_type: application/octet-stream
      continue-on-error: true

  build-source:
    needs: create-release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create source distribution
      run: |
        tar -czf ProjectClocktower-source.tar.gz \
          --exclude='.git' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='models/' \
          --exclude='logs/' \
          --exclude='dist/' \
          --exclude='build/' \
          .
          
    - name: Upload source distribution
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./ProjectClocktower-source.tar.gz
        asset_name: ProjectClocktower-source.tar.gz
        asset_content_type: application/gzip